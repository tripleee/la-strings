# Compiler-specific definitions: GCC under Linux (default: x86 architecture)

#########################################################################
# define the compiler and its options

ifndef BUILD_DBG
### compile fully optimized for distribution
BUILD_DBG=0
### compile with debugging info
#BUILD_DBG=1
### compile with debugging info and all optimizations off
#BUILD_DBG=2
endif

ifndef STATIC
#STATIC=1   	# build statically-linked executable
STATIC=0
endif

ifndef THREADS
#THREADS=1	# enable multi-threading
THREADS=0	# build single-threaded code
endif

ifndef PROFILE
#PROFILE=-pg
#PROFILE=-DPURIFY
endif

ifndef NODEBUG
#NODEBUG=-DNDEBUG
endif

ifndef GDB
#GDB = -ggdb3
endif

ifndef CPU
## Uncomment the appropriate CPU type
### 486
#CPU=4
### Pentium
#CPU=5
### PentiumPro or higher
#CPU=6
### AMD Athlon; not supported by GCC 2.x
#CPU=7
### AMD64/x86_64 CPUs in 64-bit mode; not supported by GCC 2.x
###    (AMD K8 [Opteron/Athlon64], newest PentiumIV with EM64t)
CPU=8
endif

ifndef BITS
#BITS=32
BITS=64
endif

ifeq ($(THREADS),1)
  PTHREAD=-pthread -DFrMULTITHREAD
else
  PTHREAD=
endif

ifeq ($(STATIC),1)
  LINKTYPE=-static -z muldefs
else
  LINKTYPE=
endif

ifdef MAKE_SHAREDLIB
SHAREDLIB=-fPIC -DSHARED
endif

WARN=-Wall -Wextra -Wno-deprecated -Wshadow -Wcast-align -Wmissing-noreturn -Wmissing-format-attribute -Wunused-result
# -Wno-multichar -Wpacked -Wdisabled-optimization -Wpadded

# explicitly force includes to check here first, to fix an incompatibility
#   with the templated iostreams (they don't have many of the functions
#   present in the old iostream)
#EXTRAINC=-I/usr/include/g++-3/

LINKBITS=-m$(BITS)
ifeq ($(CPU),8)
  CPUDEF=-march=k8 -msse -D__$(CPU)86__ -D__BITS__=$(BITS) $(LINKBITS)
else
ifeq ($(CPU),7)
  CPUDEF=-march=athlon-xp -mmmx -D__$(CPU)86__ $(LINKBITS)
else
ifeq ($(CPU),6)
  CPUDEF=-march=i$(CPU)86 -mtune=i$(CPU)86 -mmmx -D__$(CPU)86__ $(LINKBITS)
else
  CPUDEF=-march=i$(CPU)86 -mtune=i$(CPU)86 -D__$(CPU)86__ $(LINKBITS)
endif
endif
endif

#########################################################################
# external libraries
ifdef USE_SRILM
	SRILM=/usr2/jdkim/tools/decoder/srilm/src
	SRILM_INCLUDE=-I$(SRILM)/include -DLmUSE_SRILM
	SRILM_LIBPATH=-L$(SRILM)/lib/i686-m64
	SRILM_LIBS=$(SRILM_LIBPATH) -loolm -ldstruct -lmisc -lz
else
	SRILM_INCLUDE=
	SRILM_LIBS=
endif

#########################################################################
# define the compiler and its options

CC = g++
#CC = g++-4.3.2
CCLINK=$(CC)
MOREFLAGS=$(CPUDEF) $(PTHREAD) $(PROFILE) $(NODEBUG) $(EXTRAINC) $(SRILM_INCLUDE) $(SHAREDLIB)
ifeq ($(BUILD_DBG),2)
  CFLAGS=-ggdb3 -O0 -fno-inline -g3 $(WARN) $(MOREFLAGS)
  CFLAGEXE=-L$(LIBINSTDIR) $(PROFILE) -o $@
  LINKFLAGS = $(LINKBITS) $(PTHREAD) $(LINKTYPE)
else
ifeq ($(BUILD_DBG),1)
  CFLAGS=-ggdb3 -O -g3 $(WARN) $(MOREFLAGS)
  CFLAGEXE=-L$(LIBINSTDIR) $(PROFILE) -o $@
  LINKFLAGS = $(LINKBITS) $(PTHREAD) $(LINKTYPE)
else
  CFLAGS=-O9 -fexpensive-optimizations -g$(DBGLVL) $(WARN) $(GDB) $(MOREFLAGS)
        # -fweb -ftracer -fgcse-sm -fgcse-las -fno-math-errno
  CFLAGEXE=-L$(LIBINSTDIR) $(PROFILE) -o $@
  LINKFLAGS = $(LINKBITS) $(PTHREAD) $(LINKTYPE)
endif
endif

#########################################################################
# define the object module librarian and its options

LIBRARIAN = ar
LIBFLAGS = rucl
LIBOBJS = $(OBJS)

#########################################################################
# define the library indexer and its options

LIBINDEXER = ranlib
LIBIDXFLAGS = $(LIBRARY)

#########################################################################
# define file copy/deletion/etc. programs

RM = rm -f
CP = cp -p
ZIP = zip -q
ZIPFLAGS = -o9
BITBUCKET = >&/dev/null
TOUCH = touch

#########################################################################
# define the various extensions in use

OBJ = .o
EXE =
LIB = .a
C = .C

#########################################################################
# define the required libraries in the proper format for the OS

USELIBS = -lcrypt -lrt $(SRILM_LIBS)

#########################################################################
# define the default compile rule

$(C)$(OBJ): ; $(CC) $(CFLAGS) $(INCLUDEDIRS) $(COMPILE_OPTS) -c $<
.cpp.C: ; ln -s $< $@

.SUFFIXES: $(OBJ) .C $(C) .cpp

#########################################################################

# End of Makefile
